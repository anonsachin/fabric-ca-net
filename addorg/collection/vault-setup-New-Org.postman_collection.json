{
	"info": {
		"_postman_id": "aa677af9-0950-4f44-ab10-6217e95ebbee",
		"name": "vault-setup Simple Network New Org",
		"description": "setup of vault pki",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Org MSP",
			"item": [
				{
					"name": "create pki",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ac3dacd7-2868-46eb-a0fb-63c8007c8dff",
								"exec": [
									"pm.environment.set(\"url\",'127.0.0.1:8200')",
									"pm.environment.set(\"token\",\"myroot\")",
									"pm.environment.set(\"baseDomain\",\"service.consul\")",
									"const org = \"NewOrg\"",
									"pm.environment.set(\"org\",org)",
									"const path = `${org}CA`",
									"pm.environment.set(\"path\",path)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0cda76c3-6196-4d1e-b61d-742a4edb6104",
								"exec": [
									"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204) );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\":\"pki\",\n    \"config\": {\n        \"max_lease_ttl\":\"87600h\",\n        \"default_lease_ttl\":\"87600h\"\n    },\n    \"seal_wrap\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/sys/mounts/{{path}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"sys",
								"mounts",
								"{{path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create ca",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "31548dac-1e6f-4875-a876-2b4bbf85f907",
								"exec": [
									"let org =pm.environment.get(\"org\")",
									"let commonName = `${org}CA`",
									"pm.variables.set(\"commonName\",commonName);",
									"pm.variables.set(\"size\",256);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cd769630-f854-438b-a822-695cc38e5b42",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.be.ok );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"common_name\": \"{{commonName}}\",\n    \"ttl\": \"87600h\",\n    \"key_type\": \"ec\",\n    \"key_bits\": {{size}},\n    \"organization\": \"{{org}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/{{path}}/root/generate/internal",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"{{path}}",
								"root",
								"generate",
								"internal"
							]
						},
						"description": "creating the ca of the pki engine"
					},
					"response": []
				},
				{
					"name": "create a role Peer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e8ffb0ad-795c-40f5-b394-3379a3bb2774",
								"exec": [
									"let OU = \"peer\"",
									"const org = pm.environment.get(\"org\")",
									"pm.variables.set(\"roles\",OU)",
									"let baseDomain = pm.environment.get(\"baseDomain\")",
									"",
									"const payload = {",
									"    server_flag: false,",
									"    client_flag: false,",
									"    key_type: \"ec\",",
									"    key_bits: 256,",
									"    key_usage: [\"DigitalSignature\"],",
									"    max_ttl: \"3000h\",",
									"    generate_lease: true,",
									"    allow_any_name: true,",
									"    ou: OU,",
									"    organization: org,",
									"    generate_lease: true,",
									"    allowed_domains: baseDomain,",
									"    allow_subdomains: true,",
									"    basic_constraints_valid_for_non_ca: true",
									"}",
									"pm.variables.set(\"payload\",JSON.stringify(payload))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e7b7271d-52bb-484b-89b9-2380fac0c88b",
								"exec": [
									"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204) );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/{{path}}/roles/{{roles}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"{{path}}",
								"roles",
								"{{roles}}"
							]
						},
						"description": "creating a role for issuing certs"
					},
					"response": []
				},
				{
					"name": "create a role Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f893fe79-0af1-42e5-b8f9-8379e3339e91",
								"exec": [
									"let OU = \"admin\"",
									"const org = pm.environment.get(\"org\")",
									"pm.variables.set(\"roles\",OU)",
									"let baseDomain = pm.environment.get(\"baseDomain\")",
									"",
									"const payload = {",
									"    server_flag: false,",
									"    client_flag: false,",
									"    key_type: \"ec\",",
									"    key_bits: 256,",
									"    key_usage: [\"DigitalSignature\"],",
									"    max_ttl: \"3000h\",",
									"    generate_lease: true,",
									"    allow_any_name: true,",
									"    ou: OU,",
									"    organization: org,",
									"    generate_lease: true,",
									"    allowed_domains: baseDomain,",
									"    allow_subdomains: true,",
									"    basic_constraints_valid_for_non_ca: true",
									"}",
									"pm.variables.set(\"payload\",JSON.stringify(payload))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2cf951a6-8aca-4bb3-8f83-ecefd0003537",
								"exec": [
									"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204) );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/{{path}}/roles/{{roles}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"{{path}}",
								"roles",
								"{{roles}}"
							]
						},
						"description": "creating a role for issuing certs"
					},
					"response": []
				}
			],
			"description": "orderer pki setup",
			"protocolProfileBehavior": {}
		},
		{
			"name": "New Org TLS",
			"item": [
				{
					"name": "create pki",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d81d92b8-d939-41bb-9c81-1d46ae819727",
								"exec": [
									"let org = pm.environment.get(\"org\")",
									"const path = `${org}TLSCA`",
									"pm.environment.set(\"path\",path)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7b5a7610-11c6-4c64-bbba-ac00afac0b8b",
								"exec": [
									"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204) );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\":\"pki\",\n    \"config\": {\n        \"max_lease_ttl\":\"87600h\",\n        \"default_lease_ttl\":\"87600h\"\n    },\n    \"seal_wrap\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/sys/mounts/{{path}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"sys",
								"mounts",
								"{{path}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create ca",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2d71f761-52e0-46dd-85a8-9002fe7c9ae8",
								"exec": [
									"let org =pm.environment.get(\"org\")",
									"let commonName = pm.environment.get(\"path\")",
									"pm.variables.set(\"commonName\",commonName);",
									"pm.variables.set(\"size\",256);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e222c94d-de69-4d2d-a65c-b152187dea82",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.be.ok );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"common_name\": \"{{commonName}}\",\n    \"ttl\": \"87600h\",\n    \"key_type\": \"ec\",\n    \"key_bits\": {{size}},\n    \"organization\": \"{{org}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/{{path}}/root/generate/internal",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"{{path}}",
								"root",
								"generate",
								"internal"
							]
						},
						"description": "creating the ca of the pki engine"
					},
					"response": []
				},
				{
					"name": "create a role Peer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bbe1ef0b-e13c-4d08-bbed-cd328895f5b0",
								"exec": [
									"let OU = \"peer\"",
									"const org = pm.environment.get(\"org\")",
									"pm.variables.set(\"roles\",OU)",
									"let baseDomain = pm.environment.get(\"baseDomain\")",
									"",
									"const payload = {",
									"    server_flag: true,",
									"    client_flag: true,",
									"    key_type: \"ec\",",
									"    key_bits: 256,",
									"    key_usage: [\"DigitalSignature\", \"KeyAgreement\", \"KeyEncipherment\"],",
									"    max_ttl: \"3000h\",",
									"    generate_lease: true,",
									"    allow_any_name: false,",
									"    ou: OU,",
									"    organization: org,",
									"    generate_lease: true,",
									"    allowed_domains: baseDomain,",
									"    allow_subdomains: true,",
									"    basic_constraints_valid_for_non_ca: true",
									"}",
									"pm.variables.set(\"payload\",JSON.stringify(payload))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "91daa9fd-fe1b-48ae-9a9a-a5c5e662225b",
								"exec": [
									"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204) );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/{{path}}/roles/{{roles}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"{{path}}",
								"roles",
								"{{roles}}"
							]
						},
						"description": "creating a role for issuing certs"
					},
					"response": []
				},
				{
					"name": "create a role Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fcf7f95d-7269-4f19-aa03-847a9d332265",
								"exec": [
									"let OU = \"admin\"",
									"const org = pm.environment.get(\"org\")",
									"pm.variables.set(\"roles\",OU)",
									"let baseDomain = pm.environment.get(\"baseDomain\")",
									"",
									"const payload = {",
									"    server_flag: true,",
									"    client_flag: true,",
									"    key_type: \"ec\",",
									"    key_bits: 256,",
									"    key_usage: [\"DigitalSignature\", \"KeyAgreement\", \"KeyEncipherment\"],",
									"    max_ttl: \"3000h\",",
									"    generate_lease: true,",
									"    allow_any_name: true,",
									"    ou: OU,",
									"    organization: org,",
									"    generate_lease: true,",
									"    allowed_domains: baseDomain,",
									"    allow_subdomains: true,",
									"    basic_constraints_valid_for_non_ca: true",
									"}",
									"pm.variables.set(\"payload\",JSON.stringify(payload))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5cfce3f0-92ad-4d3e-bdd0-5bde706f189f",
								"exec": [
									"pm.test(\"Status code is 204\", () => pm.response.to.have.status(204) );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{payload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/v1/{{path}}/roles/{{roles}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"{{path}}",
								"roles",
								"{{roles}}"
							]
						},
						"description": "creating a role for issuing certs"
					},
					"response": []
				}
			],
			"description": "peer TLS pki setup",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0497d2f4-1bdf-4118-a6aa-d1c3cd912448",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a357c493-e718-4fc2-8062-6de871c7b746",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}